Importez le fichier SQL "catalogue.sql" dans une base de donnée nommée "catalogue"

1]
-Sélectionnez tous les champs des films sortis après 1960.

        SELECT *
        FROM film AS f
        WHERE f.date_sortie > '1960-01-01'

-Sélectionnez le titre des films sortis avant 1960.

        SELECT f.titre
        FROM film AS f
        WHERE f.date_sortie < '1960-01-01'

2]
-Changez la description du film dont l'ID est 35

        UPDATE film
        SET description='film d\'ordinateur et monde alternatif'
        WHERE film.id = 35

3]
-Insérez un nouveau film - Qu'il soit rattaché à au moins trois catégories. Donnez les requêtes SQL utilisées.

        INSERT INTO film (`id`, `titre`, `slug`, `image`, `prix`, `description`, `date_sortie`) 
        VALUES (50, 'Avengers', 'avengers','joli.jpg', 15, 'film super-héros', '2014-04-12')
        INSERT INTO films_categs VALUES
        (50, 49),
        (50,52),
        (50,54)

    Vérification :
    
        SELECT film.id, film.titre, c.nom
        FROM `film` 
        LEFT JOIN films_categs as fc
        ON fc.id_film = film.id
        LEFT JOIN categorie as c
        ON c.id = fc.id_categorie
        WHERE film.id = 50


4]
-récupérez dans la même requête tous les commentaires du film dont l'ID est 43,
 tous les champs du film 43, et tous les champs des utilisateurs ayant mis ces commentaires

        SELECT film.* , user.*, c.commentaire
        FROM film 
        LEFT JOIN commentaire as c
        ON film.id = c.id_film
        LEFT JOIN user 
        ON user.id = c.id_user
        WHERE film.id = 43

5]
-Supprimez le film dont le slug commence par "t"
        DELETE FROM film
        WHERE film.slug LIKE 't%'


6]
-Récupérez tous les champs des utilisateurs qui ont mis des commentaires. Il ne doit pas avoir de doublons -
 un même utilisateur ne doit apparaître qu'une seule fois

        SELECT DISTINCT user.*
        FROM user
        INNER JOIN commentaire as c 
        ON c.id_user = user.id
        WHERE c.commentaire is NOT NULL

7]
-Récupérez tous les films de la catégorie dont l'ID est 51

        SELECT film.titre, c.nom, c.id
        FROM `categorie` AS c
        RIGHT JOIN films_categs as fc
        ON c.id = fc.id_categorie
        RIGHT JOIN film
        ON fc.id_film = film.id
        WHERE c.id = 51

8]
-faites la moyenne des notes des films du site

        SELECT AVG(commentaire.note) AS moyenne_note
        FROM commentaire

9]
-Récupérez tous les films sortis au mois de juin

        SELECT *
        FROM film
        WHERE MONTH(film.date_sortie) = '06'

10]
-Récupérez tous les utilisateurs dont le role est user et qui ont postés des commentaires.
 Il ne doit pas y avoir de doublon.

        SELECT user.* 
        FROM user 
        INNER JOIN commentaire as c
        ON user.id = c.id_user
        WHERE user.login = 'user' AND c.commentaire IS NOT NULL
        GROUP BY user.id
